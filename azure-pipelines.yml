# Pact provider workflow - dynamically fetches pacts, based on consumer version selectors
# Test (verify pacts) -> Publish verification results -> Can-I-Deploy to Prod -> Record Deployment (master branch)

pool:
  vmImage: ubuntu-latest

resources:
  repositories:
    - repository: pact_templates
      type: github
      name: you54f/example-consumer-dotnet
      ref: refs/head/templates

variables:
  - name: PACTICIPANT
    value: "pactflow-example-provider-dotnet"
  - name: PACT_BROKER_BASE_URL
    value: https://testdemo.pactflow.io
  - template: templates/azure_pact_variables.yml@pact_templates
  # - name: GIT_BRANCH
  #   value: $[replace(variables['Build.SourceBranch'], 'refs/heads/', '')]
  # - name: GIT_COMMIT
  #   value: $(Build.SourceVersion)
  # - name: BUILD_URI
  #   value: '$(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)'



steps:
- script: printenv
- script: |
    dotnet restore src
    dotnet restore tests
  displayName: üì¶  Restore
- script: |
    dotnet run --project src &
  displayName: üèÅ  Start Provider
- script: |
    dotnet test tests
  displayName: ‚úÖ  Test
  env:
    PACT_BROKER_TOKEN: $(PACT_BROKER_TOKEN)
    PACT_BROKER_PUBLISH_VERIFICATION_RESULTS: true

- template: templates/azure_pact_can_i_deploy_with_params.yml@pact_templates
  parameters:
    to_environment: production
    application_name: $(PACTICIPANT)
    token: $(PACT_BROKER_TOKEN)
- template: templates/azure_pact_record_deployment_with_params.yml@pact_templates
  parameters:
    environment: production
    application_name: $(PACTICIPANT)
    token: $(PACT_BROKER_TOKEN)
  


# - script: |
#     docker run \
#       --rm \
#       -v ${PWD}:${PWD} \
#       -e PACT_BROKER_BASE_URL \
#       -e PACT_BROKER_TOKEN pactfoundation/pact-cli:latest \
#       broker can-i-deploy \
#         --pacticipant ${PACTICIPANT} \
#         --version ${GIT_COMMIT} \
#         --to-environment production
#   displayName: üéõ  Can I deploy?
#   env:
#     PACT_BROKER_TOKEN: $(PACT_BROKER_TOKEN)

# - script: |
#     docker run \
#       --rm \
#       -v ${PWD}:${PWD} \
#       -e PACT_BROKER_BASE_URL \
#       -e PACT_BROKER_TOKEN pactfoundation/pact-cli:latest \
#       broker record_deployment \
#           --pacticipant ${PACTICIPANT} \
#           --version ${GIT_COMMIT} \
#           --environment production
#   displayName: üöÄ  Deploy
#   env:
#     PACT_BROKER_TOKEN: $(PACT_BROKER_TOKEN)